#!/bin/bash

# Script de configuration de la base de donn√©es
# Usage: ./setup-database.sh [development|production]

set -e

ENVIRONMENT=${1:-development}
DB_NAME="hrapp"
DB_USER="hrapp"

echo "üóÉÔ∏è  Configuration de la base de donn√©es pour l'environnement: $ENVIRONMENT"

# G√©n√©ration d'un mot de passe s√©curis√© pour la production
if [ "$ENVIRONMENT" = "production" ]; then
    DB_PASSWORD=$(openssl rand -base64 32)
else
    DB_PASSWORD="dev_password_123"
fi

echo "üìù Param√®tres de la base de donn√©es:"
echo "   Nom: $DB_NAME"
echo "   Utilisateur: $DB_USER"
echo "   Mot de passe: [g√©n√©r√© automatiquement]"

# V√©rification de PostgreSQL
if ! command -v psql &> /dev/null; then
    echo "‚ùå PostgreSQL n'est pas install√©"
    echo "üìã Installation sur Ubuntu/Debian: sudo apt install postgresql postgresql-contrib"
    echo "üìã Installation sur CentOS/RHEL: sudo dnf install postgresql-server postgresql-contrib"
    exit 1
fi

# Cr√©ation de l'utilisateur et de la base de donn√©es
echo "üî® Cr√©ation de l'utilisateur et de la base de donn√©es..."

# V√©rification si l'utilisateur existe d√©j√†
if sudo -u postgres psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='$DB_USER'" | grep -q 1; then
    echo "‚ÑπÔ∏è  L'utilisateur $DB_USER existe d√©j√†"
else
    sudo -u postgres createuser -P $DB_USER
fi

# V√©rification si la base de donn√©es existe d√©j√†
if sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw $DB_NAME; then
    echo "‚ÑπÔ∏è  La base de donn√©es $DB_NAME existe d√©j√†"
else
    sudo -u postgres createdb -O $DB_USER $DB_NAME
fi

# Installation de l'extension pgcrypto
echo "üîß Installation de l'extension pgcrypto..."
sudo -u postgres psql -d $DB_NAME -c "CREATE EXTENSION IF NOT EXISTS pgcrypto;"

# Configuration des permissions
echo "üîê Configuration des permissions..."
sudo -u postgres psql -d $DB_NAME << EOF
GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;
GRANT ALL ON SCHEMA public TO $DB_USER;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $DB_USER;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO $DB_USER;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO $DB_USER;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO $DB_USER;
EOF

# Affichage de l'URL de connexion
DATABASE_URL="postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME"
echo ""
echo "‚úÖ Base de donn√©es configur√©e avec succ√®s !"
echo "üìã URL de connexion: $DATABASE_URL"
echo ""
echo "üí° Ajoutez cette ligne √† votre fichier .env.$ENVIRONMENT :"
echo "DATABASE_URL=$DATABASE_URL"